/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { IconColor, IconSizes } from "./components/design-system/icon/icon.interface";
export namespace Components {
    interface NxlpButton {
        "icon"?: string;
        "text": string;
        "type"?: BtnType;
    }
    interface TdnUiIcon {
        /**
          * Specifies the label to use for accessibility. Defaults to the icon name.
         */
        "ariaLabel"?: string;
        "color": IconColor;
        /**
          * If enabled, icon will be loaded lazily when it's visible in the viewport. Default, `false`.
         */
        "lazy": boolean;
        /**
          * Specifies which icon to use from the built-in set of icons.
         */
        "name"?: string;
        /**
          * The size of the icon: xxs through xl
         */
        "size"?: IconSizes;
    }
}
declare global {
    interface HTMLNxlpButtonElement extends Components.NxlpButton, HTMLStencilElement {
    }
    var HTMLNxlpButtonElement: {
        prototype: HTMLNxlpButtonElement;
        new (): HTMLNxlpButtonElement;
    };
    interface HTMLTdnUiIconElement extends Components.TdnUiIcon, HTMLStencilElement {
    }
    var HTMLTdnUiIconElement: {
        prototype: HTMLTdnUiIconElement;
        new (): HTMLTdnUiIconElement;
    };
    interface HTMLElementTagNameMap {
        "nxlp-button": HTMLNxlpButtonElement;
        "tdn-ui-icon": HTMLTdnUiIconElement;
    }
}
declare namespace LocalJSX {
    interface NxlpButton {
        "icon"?: string;
        "text"?: string;
        "type"?: BtnType;
    }
    interface TdnUiIcon {
        /**
          * Specifies the label to use for accessibility. Defaults to the icon name.
         */
        "ariaLabel"?: string;
        "color"?: IconColor;
        /**
          * If enabled, icon will be loaded lazily when it's visible in the viewport. Default, `false`.
         */
        "lazy"?: boolean;
        /**
          * Specifies which icon to use from the built-in set of icons.
         */
        "name"?: string;
        /**
          * The size of the icon: xxs through xl
         */
        "size"?: IconSizes;
    }
    interface IntrinsicElements {
        "nxlp-button": NxlpButton;
        "tdn-ui-icon": TdnUiIcon;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "nxlp-button": LocalJSX.NxlpButton & JSXBase.HTMLAttributes<HTMLNxlpButtonElement>;
            "tdn-ui-icon": LocalJSX.TdnUiIcon & JSXBase.HTMLAttributes<HTMLTdnUiIconElement>;
        }
    }
}
